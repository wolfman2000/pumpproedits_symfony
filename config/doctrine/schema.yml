PPE_User_Role:
  actAs: { Timestampable: ~ }
  columns:
    role: { type: string(32), notnull: true; unique: true }
    value: { type: integer, notnull: true }
  
PPE_User_User:
  actAs: { Timestampable: ~ }
  columns:
    name: { type: string(12), notnull: true }
    email: { type: string(320), notnull: true }
    role_id: { type: integer, notnull: true }
    is_confirmed: { type: boolean, notnull: true, default: 0 }
  relations:
    PPE_User_Role: { local: role_id, foreign: id, foreignAlias: PPE_User_Users }
  indexes:
    user_index:
      fields: [name]
      type: unique
    email_index:
      fields: [email]
      type: unique
      

PPE_User_Condiment:
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer, notnull: true }
    oregano: { type: char(32), notnull: true }
    salt: { type: char(5), notnull: true }
    pepper: { type: char(64), notnull: true }
  relations:
    PPE_User_User: { local: user_id, foreign: id, foreignAlias: PPE_User_Condiments }
  

PPE_Song_Song:
  actAs: { Timestampable: ~ }
  columns:
    name: { type: string(64), notnull: true }
    abbr: { type: char(5), notnull: true }
    measures: { type: integer, notnull: true, default: 50 }
    is_problem: { type: boolean, notnull: true, default: 0 }
  indexes:
    song_index:
      fields: [name]
      type: unique
    abbr_index:
      fields: [abbr]
      type: unique
  
PPE_Song_Stop:
  actAs: { Timestampable: ~ }
  columns:
    song_id: { type: integer, notnull: true }
    beat: { type: float, notnull: true, default: 0 }
    break: { type: float, notnull: false }
  relations:
    PPE_Song_Song: { local: song_id, foreign: id, foreignAlias: PPE_Song_Songs }
  indexes:
    stop_index:
      fields: [song_id, beat]
      type: unique
  
PPE_Song_BPM:
  actAs: { Timestampable: ~ }
  columns:
    song_id: { type: integer, notnull: true }
    beat: { type: float, notnull: true, default: 0 }
    bpm: { type: float, notnull: false }
  relations:
    PPE_Song_Song: { local: song_id, foreign: id, foreignAlias: PPE_Song_Songs }
  indexes:
    bpm_index:
      fields: [song_id, beat]
      type: unique
  
PPE_Edit_Edit:
  actAs: { Timestampable: ~; SoftDelete: ~ }
  columns:
    user_id: { type: integer, notnull: true }
    song_id: { type: integer, notnull: true }
    title: { type: string(12), notnull: true }
    is_single: { type: boolean, notnull: true, default: 1 }
    diff: { type: integer, notnull: true, default: 10 }
    steps: { type: integer, notnull: true }
    jumps: { type: integer, notnull: true }
    holds: { type: integer, notnull: true }
    mines: { type: integer, notnull: true }
    trips: { type: integer, notnull: true }
    rolls: { type: integer, notnull: true }
    lifts: { type: integer, notnull: true, default: 0 }
    fakes: { type: integer, notnull: true, default: 0 }
    is_problem: { type: boolean, notnull: true, default: 0 }
  relations:
    PPE_User_User: { local: user_id, foreign: id, foreignAlias: PPE_Edit_Edits }
    PPE_Song_Song: { local: song_id, foreign: id, foreignAlias: PPE_Edit_Edits } 
  indexes:
    author_index:
      fields: [user_id, song_id, title, is_single]
      type: unique
  
PPE_Vote_Vote:
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer, notnull: true }
    edit_id: { type: integer, notnull: true }
    rating: { type: integer, notnull: true }
    reason: { type: string, notnull: false }
    is_problem: { type: boolean, notnull: true, default: 0 }
  relations:
    PPE_User_User: { local: user_id, foreign: id, foreignAlias: PPE_Vote_Votes }
    PPE_Edit_Edit: { local: edit_id, foreign: id, foreignAlias: PPE_Vote_Votes }
  indexes:
    single_vote_index:
      fields: [user_id, edit_id, rating]
      type: unique

