ITG_User_Role:
  actAs: { Timestampable: ~ }
  columns:
    role:
      type: string
      length: 32
      notnull: true
      unique: true
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_User_User:
  actAs:
    Timestampable: ~
    Lowercase:
      columns:
        name:
          columnName: lc_name
        email:
          columnName: lc_email
  columns:
    name:
      type: string
      length: 12
      notnull: true
    email:
      type: string
      length: 320
      notnull: false
    is_confirmed:
      type: boolean
      notnull: true
      default: 0
  indexes:
    user_index:
      fields: [name]
      type: unique
#    email_index:
#      fields: [email]
#      type: unique
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_User_Power:
  columns:
    user_id:
      type: integer
      notnull: true
    role_id:
      type: integer
      notnull: true
      # This is primarily known by checking the fixture file.
      default: 3
  relations:
    ITG_User_User:
      local: user_id
      foreign: id
      foreignAlias: ITG_User_Powers
      foreignKeyName: power_user_fk
    ITG_User_Role:
      local: role_id
      foreign: id
      foreignAlias: ITG_User_Powers
      foreignKeyName: power_role_fk
  indexes:
    user_roles_index:
      fields: [user_id, role_id]
      type: unique
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_User_Condiment:
  actAs: { Timestampable: ~ }
  columns:
    user_id:
      type: integer
      notnull: true
    oregano:
      type: char
      length: 32
      notnull: true
    salt:
      type: char
      length: 5
      notnull: true
    pepper:
      type: char
      length: 64
      notnull: true
  relations:
    ITG_User_User:
      local: user_id
      foreign: id
      foreignAlias: ITG_User_Condiments
      foreignKeyName: condiment_user_fk
  indexes:
    spice_index:
      fields: [user_id]
      type: unique
  checks:
    oregano_check: length(oregano) = 32
    salt_check: length(salt) = 5
    peITGr_check: length(pepper) = 64
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_Song_Song:
  actAs:
    Timestampable:
    Lowercase:
      columns:
        name:
          columnName: lc_name
  columns:
    name:
      type: string
      length: 64
      notnull: true
    abbr:
      type: char
      length: 5
      notnull: true
    measures:
      type: integer
      notnull: true
      default: 50
    is_problem:
      type: boolean
      notnull: true
      default: 0
  indexes:
    song_index:
      fields: [name]
      type: unique
    abbr_index:
      fields: [abbr]
      type: unique
  checks:
    measure_check: measures > 0
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_Song_Stop:
  actAs: { Timestampable: ~ }
  columns:
    song_id:
      type: integer
      notnull: true
    beat:
      type: decimal
      notnull: true
      default: 0
      size: 8
      scale: 4
    break:
      type: decimal
      notnull: false
      size: 4
      scale: 2
  relations:
    ITG_Song_Song:
      local: song_id
      foreign: id
      foreignAlias: ITG_Song_Songs
      foreignKeyName: stop_song_fk
  indexes:
    stop_index:
      fields: [song_id, beat]
      type: unique
  checks:
    beat_check: beat > 0
    break_check: break IS NULL OR break > 0
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_Song_BPM:
  actAs: { Timestampable: ~ }
  columns:
    song_id:
      type: integer
      notnull: true
    beat:
      type: decimal
      notnull: true
      default: 0
      size: 8
      scale: 4
    bpm:
      type: decimal
      notnull: false
      size: 8
      scale: 4
  relations:
    ITG_Song_Song:
      local: song_id
      foreign: id
      foreignAlias: ITG_Song_Songs
      foreignKeyName: bpm_song_fk
  indexes:
    bpm_index:
      fields: [song_id, beat]
      type: unique
  checks:
    beat_check: beat >= 0
    # No negative BPMs yet.
    bpm_check: bpm IS NULL OR bpm > 0
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

ITG_Edit_Edit:
  actAs:
    Timestampable: ~
    SoftDelete: ~
    CountCache:
      relations:
        ITG_Song_Song:
          columnName: num_edits
          foreignAlias: ITG_Edit_Edits
        ITG_User_User:
          columnName: num_edits
          foreignAlias: ITG_Edit_Edits
  columns:
    user_id:
      type: integer
      notnull: true
    song_id:
      type: integer
      notnull: true
    title:
      type: string
      length: 12
      notnull: true
    is_single:
      type: boolean
      notnull: true
      default: 1
    diff:
      type: integer
      notnull: true
      default: 10
    steps:
      type: integer
      notnull: true
    jumps:
      type: integer
      notnull: true
      default: 0
    holds:
      type: integer
      notnull: true
      default: 0
    mines:
      type: integer
      notnull: true
      default: 0
    trips:
      type: integer
      notnull: true
      default: 0
    rolls:
      type: integer
      notnull: true
      default: 0
    is_problem:
      type: boolean
      notnull: true
      default: 0
  relations:
    ITG_User_User:
      local: user_id
      foreign: id
      foreignAlias: ITG_Edit_Edits
      foreignKeyName: edit_user_fk
    ITG_Song_Song:
      local: song_id
      foreign: id
      foreignAlias: ITG_Edit_Edits
      foreignKeyName: edit_song_fk
  indexes:
    author_index:
      fields: [user_id, song_id, title, is_single]
      type: unique
  checks:
    diff_check: diff > 0
    steps_check: steps > 0
    jumps_check: jumps >= 0
    holds_check: holds >= 0
    mines_check: mines >= 0
    trips_check: trips >= 0
    rolls_check: rolls >= 0
  options:
    type: INNODB
    collate: utf8_unicode_ci
    charset: utf8

