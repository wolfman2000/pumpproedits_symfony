<?php

/**
 * BasePPE_Song_Song
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property char $abbr
 * @property integer $measures
 * @property boolean $is_problem
 * @property Doctrine_Collection $PPE_Song_Songs
 * @property Doctrine_Collection $PPE_Edit_Edits
 * 
 * @method string              getName()           Returns the current record's "name" value
 * @method char                getAbbr()           Returns the current record's "abbr" value
 * @method integer             getMeasures()       Returns the current record's "measures" value
 * @method boolean             getIsProblem()      Returns the current record's "is_problem" value
 * @method Doctrine_Collection getPPESongSongs()   Returns the current record's "PPE_Song_Songs" collection
 * @method Doctrine_Collection getPPEEditEdits()   Returns the current record's "PPE_Edit_Edits" collection
 * @method PPE_Song_Song       setName()           Sets the current record's "name" value
 * @method PPE_Song_Song       setAbbr()           Sets the current record's "abbr" value
 * @method PPE_Song_Song       setMeasures()       Sets the current record's "measures" value
 * @method PPE_Song_Song       setIsProblem()      Sets the current record's "is_problem" value
 * @method PPE_Song_Song       setPPESongSongs()   Sets the current record's "PPE_Song_Songs" collection
 * @method PPE_Song_Song       setPPEEditEdits()   Sets the current record's "PPE_Edit_Edits" collection
 * 
 * @package    pumpproedits
 * @subpackage model
 * @author     JasonWolfman2000Felds
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePPE_Song_Song extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('p_p_e__song__song');
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             'notnull' => true,
             ));
        $this->hasColumn('abbr', 'char', 5, array(
             'type' => 'char',
             'length' => 5,
             'notnull' => true,
             ));
        $this->hasColumn('measures', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 50,
             ));
        $this->hasColumn('is_problem', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('song_index', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->index('abbr_index', array(
             'fields' => 
             array(
              0 => 'abbr',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');

        $this->check('measures > 0');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PPE_Song_Stop as PPE_Song_Songs', array(
             'local' => 'id',
             'foreign' => 'song_id'));

        $this->hasMany('PPE_Edit_Edit as PPE_Edit_Edits', array(
             'local' => 'id',
             'foreign' => 'song_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $lowercase0 = new Lowercase(array(
             'columns' => 
             array(
              'name' => 
              array(
              'columnName' => 'lc_name',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($lowercase0);
    }
}