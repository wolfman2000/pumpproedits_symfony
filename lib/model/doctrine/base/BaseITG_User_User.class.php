<?php

/**
 * BaseITG_User_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email
 * @property boolean $is_confirmed
 * @property Doctrine_Collection $ITG_Edit_Edits
 * 
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getEmail()          Returns the current record's "email" value
 * @method boolean             getIsConfirmed()    Returns the current record's "is_confirmed" value
 * @method Doctrine_Collection getITGEditEdits()   Returns the current record's "ITG_Edit_Edits" collection
 * @method ITG_User_User       setName()           Sets the current record's "name" value
 * @method ITG_User_User       setEmail()          Sets the current record's "email" value
 * @method ITG_User_User       setIsConfirmed()    Sets the current record's "is_confirmed" value
 * @method ITG_User_User       setITGEditEdits()   Sets the current record's "ITG_Edit_Edits" collection
 * 
 * @package    itgedits
 * @subpackage model
 * @author     JasonWolfman2000Felds
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseITG_User_User extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('i_t_g__user__user');
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 320, array(
             'type' => 'string',
             'length' => 320,
             'notnull' => false,
             ));
        $this->hasColumn('is_confirmed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('user_index', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ITG_Edit_Edit as ITG_Edit_Edits', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $lowercase0 = new Lowercase(array(
             'columns' => 
             array(
              'name' => 
              array(
              'columnName' => 'lc_name',
              ),
              'email' => 
              array(
              'columnName' => 'lc_email',
              ),
             ),
             ));
        $this->actAs($lowercase0);
    }
}