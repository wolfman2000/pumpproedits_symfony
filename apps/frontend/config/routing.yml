# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url: '/'
  param:
    module: ppehome
    action: index

# credits / thanks page
thanks:
  url: /thanks
  param:
    module: thanks
    action: index

# Base edit page:
base_edit:
  url: /base/:page
  param:
    module: base
    action: index
    page: 1
  requirements:
    page: \d+

# Download a base edit.
download_base_edit:
  url: /base/download/:id/:type
  param:
    module: base
    action: download

# Illegal base download:
download_base_edit_404:
  url: /base/download/*
  param:
    module: base
    action: download

# The dynamic chart generator
chart_gen_get:
  url: /chart
  class: sfRequestRoute
  param:
    module: chart
    action: index
  requirements:
    sf_method: [GET]

# The result of the chart generator.
chart_gen_post:
  url: /chart
  class: sfRequestRoute
  param:
    module: chart
    action: validate
  requirements:
    sf_method: [POST]

# The newer, friendlier chart generator (members only)
chart_adv_get:
  url: /chart/adv
  class: sfRequestRoute
  param:
    module: chart
    action: advanced
  requirements:
    sf_method: [GET]

# The result of the above processing
chart_adv_post:
  url: /chart/adv
  class: sfRequestRoute
  param:
    module: chart
    action: advProcess
  requirements:
    sf_method: [POST]

# Show the list of songs for official charting.
chart_off_get:
  url: /chart/official
  class: sfRequestRoute
  param:
    module: chart
    action: official
  requirements:
    sf_method: [GET]

# Generate the chosen chart.
chart_off_post:
  url: /chart/official
  class: sfRequestRoute
  param:
    module: chart
    action: offProcess
  requirements:
    sf_method: [POST]

# Quickly generate a chart.
chart_quick:
  url: /chart/quick/:id/
  param:
    module: chart
    action: quick
  requirements:
    id: \d+

# The edit stat getter/validator
edit_stat_get:
  url: /stats
  class: sfRequestRoute
  param:
    module: stats
    action: index
  requirements:
    sf_method: [GET]

# The results of the edit stat getter (post)
edit_stat_post:
  url: /stats
  class: sfRequestRoute
  param:
    module: stats
    action: validate
  requirements:
    sf_method: [POST]

# Contact page: fill out the form
contact_get:
  url: /contact
  class: sfRequestRoute
  param:
    module: contact
    action: index
  requirements:
    sf_method: [GET]

# Send the contact email.
contact_post:
  url: /contact
  class: sfRequestRoute
  param:
    module: contact
    action: validate
  requirements:
    sf_method: [POST]

# General edits page (this may change)
edits:
  url: /edits
  param:
    module: edits
    action: index

# Edits by song:
edit_song:
  url: /songs
  param:
    module: edits
    action: song

# The chosen song (unsure if I'll use the pager)
edit_csong:
  url: /song/:id/:page
  param:
    module: edits
    action: chosenSong
    page: 1
  requirements:
    id: \d+

# Edits by user
edit_user:
  url: /users
  param:
    module: edits
    action: user

# The chosen user (unsure if I'll use the pager)
edit_cuser:
  url: /user/:id/:page
  param:
    module: edits
    action: chosenUser
    page: 1
  requirements:
    id: \d+

# Download the chosen edit
edit_download:
  url: /edits/download/:id
  param:
    module: edits
    action: download
  requirements:
    id: \d+

# Illegal edit download
edit_download_404:
  url: /edits/download/*
  param:
    module: edits
    action: download
